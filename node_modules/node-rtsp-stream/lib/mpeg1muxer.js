// Generated by CoffeeScript 1.8.0
(function() {
  var Mpeg1Muxer, child_process, events, util;

  child_process = require('child_process');

  util = require('util');

  events = require('events');
  
  var time = new Date().getTime();

  Mpeg1Muxer = function(options) {
    var self;
    self = this;
    this.url = options.url;
    var WH =  process.env['WH'] || '1024x576';
    var QUALITY =  process.env['QUALITY'] || 3;
//    this.stream = child_process.spawn("ffmpeg", ["-rtsp_transport", "tcp", "-i", this.url, '-f', 'mpeg1video', '-b:v', '800k', '-r', '30', '-'], {
    this.stream = child_process.spawn("ffmpeg", ["-rtsp_transport", "tcp", "-i", this.url, '-f', 'mpegts', '-codec:v', 'mpeg1video', '-bf', '0', '-s', WH, '-b:v', '800k', '-q', QUALITY, '-r', '25', '-'], {//, '-codec:a', 'mp2'
//    this.stream = child_process.spawn("ffmpeg", ["-rtsp_transport", "tcp", "-i", this.url, '-f', 'mpegts', '-codec:v', 'mpeg1video', '-bf', '0', '-s', '960x540', '-b:v', '800k', '-r', '25', '-'], {//, '-codec:a', 'mp2'
//    this.stream = child_process.spawn("ffmpeg", ["-rtsp_transport", "tcp", "-i", this.url, '-f', 'mpegts', '-codec:v', 'mpeg1video', '-bf', '0', '-s', '480x270', '-b:v', '800k', '-r', '25', '-'], {//, '-codec:a', 'mp2'
//    this.stream = child_process.spawn("ffmpeg", ["-rtsp_transport", "tcp", "-i", this.url, '-f', 'mpegts', '-codec:v', 'mpeg1video', '-bf', '0', '-s', '640x360', '-b:v', '800k', '-r', '25', '-'], {//, '-codec:a', 'mp2'
//    this.stream = child_process.spawn("ffmpeg", ["-rtsp_transport", "tcp", "-i", this.url, '-f', 'mpegts', '-codec:v', 'mpeg1video', '-bf', '0', '-s', '1024x768', '-max_muxing_queue_size', '999', '-b:v', '800k', '-r', '25', '-'], {//, '-codec:a', 'mp2'
//    this.stream = child_process.spawn("ffmpeg", ["-rtsp_transport", "tcp", "-i", this.url, '-f', 'mpegts', '-codec:v', 'mpeg1video', '-bf', '0', '-s', '1024x768', '-max_muxing_queue_size', '999', '-codec:a', 'mp2', '-s', '960x540', '-b:v', '800k', '-r', '25', '-'], {
      detached: false
    });
    this.inputStreamStarted = true;
    this.stream.stdout.on('data', function(data) {
//    	console.log('data.length=' + data.length);
//    	console.log(data);
    	time = new Date().getTime();
      return self.emit('mpeg1data', data);
    });
    this.stream.stderr.on('data', function(data) {
      return self.emit('ffmpegError', data);
    });
    this.stream.stdout.on('end', function() {
    	console.log('----------------------------------end----------------------------------');
    	process.exit();
//    	setTimeout(() => {
//    		process.exit();
//		}, 1);
    });
    return this;
  };

  util.inherits(Mpeg1Muxer, events.EventEmitter);
  
  setInterval(() => {
	  if(new Date().getTime() - time > 5000) {
		  console.log('----------------------------------setInterval----------------------------------');
		  process.exit();
	  }
  }, 1000);

  module.exports = Mpeg1Muxer;

}).call(this);
