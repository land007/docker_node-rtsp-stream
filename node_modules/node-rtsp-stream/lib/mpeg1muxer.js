// Generated by CoffeeScript 1.8.0
(function() {
  var Mpeg1Muxer, child_process, events, util;

  child_process = require('child_process');

  util = require('util');

  events = require('events');
  
  var time = new Date().getTime();

  Mpeg1Muxer = function(options) {
    var self;
    self = this;
    this.url = options.url;
    var WH =  process.env['WH'] || '1280x720';//1024x576
    var QUALITY =  process.env['QUALITY'] || 1;
    this.stream = child_process.spawn("ffmpeg", ["-rtsp_transport", "tcp", "-i", this.url, '-f', 'mpegts', '-codec:v', 'mpeg1video', '-bf', '0', '-b:v', '800k', '-r', '25', '-s', WH, '-q', QUALITY, '-'], {
      detached: true
    });
    var pid = this.stream.pid;
    this.inputStreamStarted = true;
    this.stream.stdout.on('data', function(data) {
      time = new Date().getTime();
      return self.emit('mpeg1data', data);
    });
    this.stream.stderr.on('data', function(data) {
      return self.emit('ffmpegError', data);
    });
    this.stream.stdout.on('end', function() {
    	console.log('----------------------------------end----------------------------------' + pid);
    	process.kill(-pid);
    	setTimeout(() => {
    		process.exit();
		}, 100);
    });
    return this;
  };

  util.inherits(Mpeg1Muxer, events.EventEmitter);
  
  setInterval(() => {
	  if(new Date().getTime() - time > 5000) {
	    	console.log('----------------------------------setInterval----------------------------------' + pid);
	    	process.kill(-pid);
	    	setTimeout(() => {
	    		process.exit();
			}, 100);
	  }
  }, 1000);

  module.exports = Mpeg1Muxer;

}).call(this);
